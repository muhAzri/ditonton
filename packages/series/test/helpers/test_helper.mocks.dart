// Mocks generated by Mockito 5.4.4 from annotations
// in series/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i18;
import 'dart:typed_data' as _i19;

import 'package:core/common/failure.dart' as _i11;
import 'package:core/data/datasources/db/database_helper.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:movie/data/models/movie_table.dart' as _i8;
import 'package:series/data/datasources/series_local_data_source.dart' as _i16;
import 'package:series/data/datasources/series_remote_data_source.dart' as _i14;
import 'package:series/data/models/series_detail_model.dart' as _i4;
import 'package:series/data/models/series_model.dart' as _i15;
import 'package:series/data/models/series_table.dart' as _i9;
import 'package:series/domain/entities/series.dart' as _i12;
import 'package:series/domain/entities/series_detail.dart' as _i13;
import 'package:series/domain/repositories/series_repository.dart' as _i10;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeriesDetailModel_2 extends _i1.SmartFake
    implements _i4.SeriesDetailModel {
  _FakeSeriesDetailModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_4 extends _i1.SmartFake
    implements _i5.StreamedResponse {
  _FakeStreamedResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i6.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Database get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDatabase_0(
          this,
          Invocation.getter(#database),
        ),
      ) as _i2.Database);

  @override
  _i7.Future<int> insertWatchlist(_i8.MovieTable? movie) => (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> insertSeriesWatchlist(_i9.SeriesTable? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertSeriesWatchlist,
          [series],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> removeWatchlist(_i8.MovieTable? movie) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> removeSeriesWatchlist(_i9.SeriesTable? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeSeriesWatchlist,
          [series],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i7.Future<Map<String, dynamic>?>.value(),
      ) as _i7.Future<Map<String, dynamic>?>);

  @override
  _i7.Future<Map<String, dynamic>?> getSeriesById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesById,
          [id],
        ),
        returnValue: _i7.Future<Map<String, dynamic>?>.value(),
      ) as _i7.Future<Map<String, dynamic>?>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistSeries,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [SeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRepository extends _i1.Mock implements _i10.SeriesRepository {
  MockSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>> getOnAirSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnAirSeries,
          [],
        ),
        returnValue:
            _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>.value(
                _FakeEither_1<_i11.Failure, List<_i12.Series>>(
          this,
          Invocation.method(
            #getOnAirSeries,
            [],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>);

  @override
  _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>> getPopularSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularSeries,
          [],
        ),
        returnValue:
            _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>.value(
                _FakeEither_1<_i11.Failure, List<_i12.Series>>(
          this,
          Invocation.method(
            #getPopularSeries,
            [],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>);

  @override
  _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>> getTopRatedSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedSeries,
          [],
        ),
        returnValue:
            _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>.value(
                _FakeEither_1<_i11.Failure, List<_i12.Series>>(
          this,
          Invocation.method(
            #getTopRatedSeries,
            [],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>);

  @override
  _i7.Future<_i3.Either<_i11.Failure, _i13.SeriesDetail>> getSeriesDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesDetail,
          [id],
        ),
        returnValue:
            _i7.Future<_i3.Either<_i11.Failure, _i13.SeriesDetail>>.value(
                _FakeEither_1<_i11.Failure, _i13.SeriesDetail>(
          this,
          Invocation.method(
            #getSeriesDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i11.Failure, _i13.SeriesDetail>>);

  @override
  _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>
      getSeriesRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getSeriesRecommendations,
              [id],
            ),
            returnValue:
                _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>.value(
                    _FakeEither_1<_i11.Failure, List<_i12.Series>>(
              this,
              Invocation.method(
                #getSeriesRecommendations,
                [id],
              ),
            )),
          ) as _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>);

  @override
  _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>> searchSeries(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchSeries,
          [query],
        ),
        returnValue:
            _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>.value(
                _FakeEither_1<_i11.Failure, List<_i12.Series>>(
          this,
          Invocation.method(
            #searchSeries,
            [query],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>);

  @override
  _i7.Future<_i3.Either<_i11.Failure, String>> saveWatchlist(
          _i13.SeriesDetail? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [series],
        ),
        returnValue: _i7.Future<_i3.Either<_i11.Failure, String>>.value(
            _FakeEither_1<_i11.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [series],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i11.Failure, String>>);

  @override
  _i7.Future<_i3.Either<_i11.Failure, String>> removeWatchlist(
          _i13.SeriesDetail? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [series],
        ),
        returnValue: _i7.Future<_i3.Either<_i11.Failure, String>>.value(
            _FakeEither_1<_i11.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [series],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i11.Failure, String>>);

  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>
      getWatchlistSeries() => (super.noSuchMethod(
            Invocation.method(
              #getWatchlistSeries,
              [],
            ),
            returnValue:
                _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>.value(
                    _FakeEither_1<_i11.Failure, List<_i12.Series>>(
              this,
              Invocation.method(
                #getWatchlistSeries,
                [],
              ),
            )),
          ) as _i7.Future<_i3.Either<_i11.Failure, List<_i12.Series>>>);
}

/// A class which mocks [SeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRemoteDataSource extends _i1.Mock
    implements _i14.SeriesRemoteDataSource {
  MockSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i15.SeriesModel>> getOnAirSeries() => (super.noSuchMethod(
        Invocation.method(
          #getOnAirSeries,
          [],
        ),
        returnValue:
            _i7.Future<List<_i15.SeriesModel>>.value(<_i15.SeriesModel>[]),
      ) as _i7.Future<List<_i15.SeriesModel>>);

  @override
  _i7.Future<List<_i15.SeriesModel>> getPopularSeries() => (super.noSuchMethod(
        Invocation.method(
          #getPopularSeries,
          [],
        ),
        returnValue:
            _i7.Future<List<_i15.SeriesModel>>.value(<_i15.SeriesModel>[]),
      ) as _i7.Future<List<_i15.SeriesModel>>);

  @override
  _i7.Future<List<_i15.SeriesModel>> getTopRatedSeries() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedSeries,
          [],
        ),
        returnValue:
            _i7.Future<List<_i15.SeriesModel>>.value(<_i15.SeriesModel>[]),
      ) as _i7.Future<List<_i15.SeriesModel>>);

  @override
  _i7.Future<_i4.SeriesDetailModel> getSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesDetail,
          [id],
        ),
        returnValue:
            _i7.Future<_i4.SeriesDetailModel>.value(_FakeSeriesDetailModel_2(
          this,
          Invocation.method(
            #getSeriesDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i4.SeriesDetailModel>);

  @override
  _i7.Future<List<_i15.SeriesModel>> getSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesRecommendations,
          [id],
        ),
        returnValue:
            _i7.Future<List<_i15.SeriesModel>>.value(<_i15.SeriesModel>[]),
      ) as _i7.Future<List<_i15.SeriesModel>>);

  @override
  _i7.Future<List<_i15.SeriesModel>> searchSeries(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchSeries,
          [query],
        ),
        returnValue:
            _i7.Future<List<_i15.SeriesModel>>.value(<_i15.SeriesModel>[]),
      ) as _i7.Future<List<_i15.SeriesModel>>);
}

/// A class which mocks [SeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesLocalDataSource extends _i1.Mock
    implements _i16.SeriesLocalDataSource {
  MockSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlist(_i9.SeriesTable? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [series],
        ),
        returnValue: _i7.Future<String>.value(_i17.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlist,
            [series],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> removeWatchlist(_i9.SeriesTable? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [series],
        ),
        returnValue: _i7.Future<String>.value(_i17.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [series],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i9.SeriesTable?> getSeriesById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getSeriesById,
          [id],
        ),
        returnValue: _i7.Future<_i9.SeriesTable?>.value(),
      ) as _i7.Future<_i9.SeriesTable?>);

  @override
  _i7.Future<List<_i9.SeriesTable>> getWatchlistSeries() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistSeries,
          [],
        ),
        returnValue:
            _i7.Future<List<_i9.SeriesTable>>.value(<_i9.SeriesTable>[]),
      ) as _i7.Future<List<_i9.SeriesTable>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<String>.value(_i17.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i19.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i19.Uint8List>.value(_i19.Uint8List(0)),
      ) as _i7.Future<_i19.Uint8List>);

  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i7.Future<_i5.StreamedResponse>.value(_FakeStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i7.Future<_i5.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
